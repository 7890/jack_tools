CC = i686-w64-mingw32-gcc

PKG_CONFIG_PATH=/home/winbuild/win-stack-w32/lib/pkgconfig/
CFLAGS ?= `/usr/bin/pkg-config --libs --cflags liblo` -D_GNU_SOURCE=1 -DUSE_WEAK_JACK=1 -DNO_JACK_METADATA=1 -D_WIN=1 -DPLATFORM_WINDOWS=1 -DRB_DISABLE_MLOCK -DRB_DISABLE_SHM -lm -w

#http://article.gmane.org/gmane.comp.gnu.mingw.user/27539/

PROGNAME ?= audio-rxtx

SRC = src
BLD = build
DOC = doc
DIST = dist

default: compile

all: compile dist

compile: 
	@echo ""
	@echo "compiling jack_audio_send, jack_audio_recieve"
	@echo "---------------------------------------------"
	@echo ""
	@echo "CC        : $(CC)"
	@echo "CFLAGS    : $(CFLAGS)"
	@echo ""

	mkdir -p $(BLD)

	@echo ""
	@echo "/!\\ audio_rxtx needs liblo fixmax branch for full operability"
	@echo "https://github.com/radarsat1/liblo/tree/fixmax"
	@echo "(alt.) https://github.com/7890/liblo/tree/fixmax"

	@echo ""
	@echo "testing for liblo version >= 0.28"
	pkg-config --atleast-version 0.28 liblo || [ $$? -eq 0 ]

#	@echo ""
#	@echo "compiling small lo program"
#	$(CC) -o $(BLD)/test_lofixmax $(SRC)/test_lofixmax.c $(CFLAGS)
#	@echo ""
#	@echo "now testing for fixmax MAX_UDP_MSG_SIZE ~65k"
#	$(BLD)/test_lofixmax || [ $$? -eq 0 ]

#weak libjack
	#weak libjack allows to determine at runtime if libjack.so.0 /.. is available -> no "hard" linking to libjack
	$(CC) -c -o $(BLD)/weak_libjack.o $(SRC)/weak_libjack.c $(CFLAGS) `pkg-config --cflags jack` -DNDEBUG

#common
	$(CC) -c -o $(BLD)/jack_audio_common.o $(SRC)/jack_audio_common.c $(CFLAGS)

#send
	$(CC) -c -o $(BLD)/jack_audio_send.o $(SRC)/jack_audio_send.c $(CFLAGS)
	$(CC) -o $(BLD)/jack_audio_send $(BLD)/jack_audio_common.o $(BLD)/jack_audio_send.o $(BLD)/weak_libjack.o $(CFLAGS)

#receive
	$(CC) -c -o $(BLD)/jack_audio_receive.o $(SRC)/jack_audio_receive.c $(CFLAGS)
	$(CC) -o $(BLD)/jack_audio_receive $(BLD)/jack_audio_common.o $(BLD)/jack_audio_receive.o $(BLD)/weak_libjack.o $(CFLAGS)

#post_send
	#experimental
	$(CC) -c -o $(BLD)/audio_post_send.o $(SRC)/audio_post_send.c $(CFLAGS)
	$(CC) -o $(BLD)/audio_post_send $(BLD)/jack_audio_common.o $(BLD)/audio_post_send.o $(BLD)/weak_libjack.o $(CFLAGS)


#windows #########################################################
	mv $(BLD)/jack_audio_receive $(BLD)/jack_audio_receive.exe
	mv $(BLD)/jack_audio_send $(BLD)/jack_audio_send.exe
	mv $(BLD)/audio_post_send $(BLD)/audio_post_send.exe

	@echo ""
	@echo "done. next (if there were no errors) is: sudo make install"
	@echo ""

dist:
	mkdir -p $(BLD)/audio_rxtx/bin
	mkdir -p $(BLD)/audio_rxtx/doc

	cp $(BLD)/jack_audio_send.exe $(BLD)/audio_rxtx/bin
	cp $(BLD)/jack_audio_receive.exe $(BLD)/audio_rxtx/bin
	cp $(BLD)/audio_post_send.exe $(BLD)/audio_rxtx/bin

#	unix2dos -n $(DOC)/jack_audio_send.1.asciidoc $(BLD)/audio_rxtx/doc/jack_audio_send.txt
#	unix2dos -n $(DOC)/jack_audio_receive.1.asciidoc $(BLD)/audio_rxtx/doc/jack_audio_receive.txt
	unix2dos -n $(DOC)/sequence_diagram.txt $(BLD)/audio_rxtx/doc/sequence_diagram.txt
	cp $(DOC)/jack_audio_send.pdf $(BLD)/audio_rxtx/doc/
	cp $(DOC)/jack_audio_receive.pdf $(BLD)/audio_rxtx/doc/

	unix2dos -n /usr/share/common-licenses/GPL-2 $(BLD)/audio_rxtx/COPYING.txt

	echo "audio_rxtx on windows (x-compiled with mingw) EXPERIMENTAL" > /tmp/tmp.txt
	echo "start JACK first (if not already running)" >> /tmp/tmp.txt
	echo "start exe programs in directory 'bin'" >> /tmp/tmp.txt
	echo "see --help" >> /tmp/tmp.txt
	echo "audio_rxtx uses many other open software bits." >> /tmp/tmp.txt
	echo "https://github.com/7890/jack_tools" >> /tmp/tmp.txt
	echo "this is free software. no warranty or support. see COPYING" >> /tmp/tmp.txt
	unix2dos -n /tmp/tmp.txt $(BLD)/audio_rxtx/README.txt

	echo ":: adjust target host and options to your needs" > /tmp/tmp.txt
	echo "start jack_audio_send.exe --in 2 --16 --connect --update 10 10.10.10.19 7878" >> /tmp/tmp.txt
	unix2dos -n /tmp/tmp.txt $(BLD)/audio_rxtx/bin/send.bat

	echo ":: adjust port and options to your needs" > /tmp/tmp.txt
	echo "start jack_audio_receive.exe --out 2 --16 --connect --update 10 --pre 20 --max 300 7878" >> /tmp/tmp.txt
	unix2dos -n /tmp/tmp.txt $(BLD)/audio_rxtx/bin/receive.bat

	rm -f /tmp/tmp.txt

	@echo "result is in $(BLD)/audio_rxtx/"
	@echo "final tasks left to build_win.sh"
	@echo "done."
	@echo ""

clean:
	rm -rf $(BLD)
	rm -rf doc-pak
	rm -f description-pak

	@echo ""
	@echo "done."
	@echo ""

.PHONY: compile manpage dist clean
